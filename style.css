html {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  overflow: hidden;
}
*, *:before, *:after {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit;
}
:root {
--icon-size: 24;
}
.flex {
display: flex;
}
.container {
position: relative;
width: 100%;
}
#container {
display: none;
background: rgba(10,10,10,.5);
color: white;
font-family: sans-serif;
}
@media screen and (min-width: 1280px) {
#container {
  max-width: 33vw;
}
}
html.fishing #container {
display: block;
}
#container > :first-child > * {
padding: .5rem;
}
#spot:empty::before {
content: 'Unknown';
opacity: .7;
}
#timer:empty::before {
content: '0.0';
}
#entries {
position: relative;
}
#spot {
flex-basis: 100%;
}
#marker {
position: absolute;
top: 0;
left: 0;
width: 100%;
height: 100%;
z-index: 1;
}
.markline {
display: none;
width: 0px;
height: 100%;
border-right: 3px solid black;
}
html.marker-active .markline {
display: block;
animation-duration: 60s;
animation-name: slidein;
animation-timing-function: linear; /* This is very important! If not set it will default to ease and not align with min max records! */
animation-fill-mode: forwards; /* Stays at 100% once finished */
}
@keyframes slidein {
from {
  width: 0%;
}
to {
  width: 100%;
}
}
.fish {
max-height: calc(var(--icon-size) * 1px);
}
.fish[data-fishid]:not(:first-of-type) {
margin-top: 1px;
}
.icon, .offset {
width: calc(var(--icon-size) * 1px);
flex-shrink: 0;
}
.icon img { /* Get rid of unnecessary spacing at the bottom */
display: block;
width: auto;
height: 100%;
}
.label {
position: relative;
width: 100%;
}
.label .name {
font-weight: bold;
align-self: center;
z-index: 2;
}
.label .name:not(:empty) {
padding-left: .5rem;
}
.record, .record-chum {
position: absolute;
display: none;
min-width: 2px;
height: 100%;
background-color: rgba(10,10,10,.5);
}
html:not(.chum-active) .record[data-min], 
html.chum-active .recordChum[data-min] {
  display: block;
}
.light {
background-color: rgb(50, 205, 50, .5);
}
.medium {
  background-color: rgb(255, 215, 0, .5);
}
.heavy {
  background-color: rgb(165, 42, 42, .5);
}